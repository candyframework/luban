{
    "name": "@luban/framework",
    "version": "0.2.6",
    "exports": {
        ".": "./mod.ts",
        "./LuBan": "./LuBan.ts",
        "./core/NotFoundException": "./core/NotFoundException.ts",
        "./core/IException": "./core/IException.ts",
        "./core/Component": "./core/Component.ts",
        "./core/IEvent": "./core/IEvent.ts",
        "./core/ActionEvent": "./core/ActionEvent.ts",
        "./core/FilterChain": "./core/FilterChain.ts",
        "./core/InvalidConfigEception": "./core/InvalidConfigEception.ts",
        "./core/IFilter": "./core/IFilter.ts",
        "./core/RuntimeException": "./core/RuntimeException.ts",
        "./core/AbstractRequest": "./core/AbstractRequest.ts",
        "./core/ModelException": "./core/ModelException.ts",
        "./core/IBehavior": "./core/IBehavior.ts",
        "./core/Types": "./core/Types.ts",
        "./core/AbstractController": "./core/AbstractController.ts",
        "./core/Hook": "./core/Hook.ts",
        "./core/AbstractExceptionHandler": "./core/AbstractExceptionHandler.ts",
        "./core/FilterFactory": "./core/FilterFactory.ts",
        "./core/IController": "./core/IController.ts",
        "./core/IApplication": "./core/IApplication.ts",
        "./core/IView": "./core/IView.ts",
        "./core/ValidatorException": "./core/ValidatorException.ts",
        "./core/Behavior": "./core/Behavior.ts",
        "./core/AbstractView": "./core/AbstractView.ts",
        "./core/IResource": "./core/IResource.ts",
        "./core/AbstractException": "./core/AbstractException.ts",
        "./core/AbstractInterceptor": "./core/AbstractInterceptor.ts",
        "./core/Event": "./core/Event.ts",
        "./core/IFilterChain": "./core/IFilterChain.ts",
        "./core/AbstractApplication": "./core/AbstractApplication.ts",
        "./core/HttpException": "./core/HttpException.ts",
        "./core/ImplementationException": "./core/ImplementationException.ts",
        "./web/ExceptionHandler": "./web/ExceptionHandler.ts",
        "./web/Interceptor": "./web/Interceptor.ts",
        "./web/Context": "./web/Context.ts",
        "./web/View": "./web/View.ts",
        "./web/Application": "./web/Application.ts",
        "./web/IWebApplication": "./web/IWebApplication.ts",
        "./web/Controller": "./web/Controller.ts",
        "./utils/IQueue": "./utils/IQueue.ts",
        "./utils/Stack": "./utils/Stack.ts",
        "./utils/LinkedQueue": "./utils/LinkedQueue.ts",
        "./utils/IList": "./utils/IList.ts",
        "./utils/ArrayList": "./utils/ArrayList.ts",
        "./utils/DataNode": "./utils/DataNode.ts",
        "./utils/LinkedList": "./utils/LinkedList.ts",
        "./http/HttpRequest": "./http/HttpRequest.ts",
        "./http/HeaderCollection": "./http/HeaderCollection.ts",
        "./http/HttpResponse": "./http/HttpResponse.ts",
        "./http/Cookie": "./http/Cookie.ts",
        "./http/CookieCollection": "./http/CookieCollection.ts",
        "./model/IValidator": "./model/IValidator.ts",
        "./model/Model": "./model/Model.ts",
        "./model/IModel": "./model/IModel.ts",
        "./model/validators/EqualValidator": "./model/validators/EqualValidator.ts",
        "./model/validators/BooleanValidator": "./model/validators/BooleanValidator.ts",
        "./model/validators/EmailValidator": "./model/validators/EmailValidator.ts",
        "./model/validators/RequiredValidator": "./model/validators/RequiredValidator.ts",
        "./model/validators/StringValidator": "./model/validators/StringValidator.ts",
        "./model/AbstractValidator": "./model/AbstractValidator.ts",
        "./helpers/FileHelper": "./helpers/FileHelper.ts",
        "./helpers/StringHelper": "./helpers/StringHelper.ts",
        "./ioc/ServiceLocator": "./ioc/ServiceLocator.ts",
        "./ioc/IService": "./ioc/IService.ts",
        "./rest/IRestApplication": "./rest/IRestApplication.ts",
        "./rest/Application": "./rest/Application.ts",
        "./rest/FastRouter": "./rest/FastRouter.ts"
    },
    "tasks": {
        "build-exports": "deno run --allow-read ./kits/scripts/build-exports.ts",
        "dev": "deno test --watch mod.ts"
    },
    "license": "MIT",
    "fmt": {
        "useTabs": false,
        "lineWidth": 150,
        "indentWidth": 4,
        "semiColons": true,
        "singleQuote": true,
        "proseWrap": "preserve",
        "include": ["./"],
        "exclude": [".git/", ".vscode/"]
    }
}
